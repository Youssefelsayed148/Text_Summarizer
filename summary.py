# -*- coding: utf-8 -*-
"""Summary.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P9LgERsYpcl97iUVOBclzxLI1zNyo6ZH
"""

!pip install -U transformers

from huggingface_hub import login

login(token="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")

# Load model directly
from transformers import AutoTokenizer,AutoModelForSeq2SeqLM

tokenizer = AutoTokenizer.from_pretrained("Youssef-El-SaYed/My-Good-Summarizer")
model = AutoModelForSeq2SeqLM.from_pretrained("Youssef-El-SaYed/My-Good-Summarizer")

input_text = "The concept of remote work has undergone a dramatic transformation over the past few years. Once considered a perk or an exception reserved for freelancers and tech workers, it has now become a standard mode of operation for many companies worldwide. The COVID-19 pandemic accelerated this shift, forcing organizations to quickly adapt to remote collaboration tools and flexible schedules to maintain business continuity.\
Interestingly, studies have shown that remote work can boost productivity and employee satisfaction. Without long commutes and with more control over their work environments, employees often report a better work-life balance. Companies, in turn, benefit from access to a broader talent pool, reduced overhead costs, and in some cases, even increased output.\
However, remote work is not without its challenges. Issues such as maintaining company culture, ensuring effective communication across teams, and managing employee well-being have come to the forefront. As organizations navigate this new landscape, many are exploring hybrid models that combine remote and in-office work to balance flexibility with collaboration.\
Looking ahead, it is likely that remote work will continue to evolve, shaped by technological advancements and changing employee expectations. The companies that succeed will be those that can adapt quickly, support their teams effectively, and foster a sense of connection regardless of where their employees are located.\
"
inputs = tokenizer(input_text, return_tensors="pt", truncation=True)
summary_ids = model.generate(inputs["input_ids"], max_length=50, num_beams=4,length_penalty=0.5)
summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
print('Summary:', summary)

